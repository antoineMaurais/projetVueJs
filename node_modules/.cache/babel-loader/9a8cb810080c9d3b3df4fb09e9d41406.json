{"ast":null,"code":"import data from \"../assets/data.min.js\"; // Lien vers toutes les données\n\nexport default {\n  name: \"spellStats\",\n  props: [\"tableauSpells\"],\n  components: {\n    checkBoxSelect,\n    spellStats,\n    menuHeader\n  },\n  data: function () {\n    return {\n      searchName: \"\",\n      searchNameBox: \"\"\n    };\n  },\n  computed: {\n    spellSearch() {\n      /*On récupère les data de la base JS qu'on importe,\n        On filtre toutes les valeurs\n        On encapsule chaque valeur de nom, ici 'spell[1]' dans une variable 'spell'\n        Qui commence par les valeurs rentrés dans la zone de texte de l'input */\n      console.log(this.searchNameBox);\n      console.log(data);\n      if (this.searchNameBox) return data.filter(spell => spell[1].startsWith(this.searchName));else return [];\n    },\n\n    statistiqueSort() {\n      if (this.searchNameBox) {\n        let value = data.filter(spell => spell[1].startsWith(this.searchName));\n        return value.length;\n      } else return 0;\n    },\n\n    statistiqueNbLivreDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter(spell => spell[1].startsWith(this.searchName));\n        let count = 0;\n        let countArrayLivre = [];\n\n        for (const vFor of value) {\n          if (!countArrayLivre.includes(vFor[0])) {\n            count++;\n            countArrayLivre.push(vFor[0]);\n          }\n        }\n\n        return count;\n      } else return 0;\n    },\n\n    statistiqueNbEcoleDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter(spell => spell[1].startsWith(this.searchName));\n        let count = 0;\n        let countArraySchool = [];\n\n        for (const vFor of value) {\n          if (!countArraySchool.includes(vFor[2])) {\n            count++;\n            countArraySchool.push(vFor[2]);\n          }\n        }\n\n        return count;\n      } else return 0;\n    },\n\n    statistiqueNbBranchesDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter(spell => spell[1].startsWith(this.searchName));\n        let count = 0;\n        let countArrayBranche = [];\n\n        for (const vFor of value) {\n          if (vFor[3].length != 0) {\n            for (const branche of vFor[3]) {\n              if (!countArrayBranche.includes(branche)) {\n                count++;\n                countArrayBranche.push(branche);\n              }\n            }\n          }\n        }\n\n        return count;\n      } else return 0;\n    },\n\n    statistiqueNbClassesDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter(spell => spell[1].startsWith(this.searchName));\n        let count = 0;\n        let countArrayClasse = [];\n\n        for (const vFor of value) {\n          if (vFor[3].length != 0) {\n            for (const classe of vFor[4]) {\n              if (!countArrayClasse.includes(classe[0])) {\n                count++;\n                countArrayClasse.push(classe[0]);\n              }\n            }\n          }\n        }\n\n        return count;\n      } else return 0;\n    }\n\n  },\n  methods: {\n    updateSearch(searchName, searchNameBox) {\n      this.searchName = searchName;\n      this.searchNameBox = searchNameBox;\n    },\n\n    ongletRecherche() {\n      alert(\"Recherche\");\n    },\n\n    ongletStats() {\n      console.log(\"Stats\");\n    },\n\n    ongletConfiguration() {\n      alert(\"Configuration\");\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["data","name","props","components","checkBoxSelect","spellStats","menuHeader","searchName","searchNameBox","computed","spellSearch","console","log","filter","spell","startsWith","statistiqueSort","value","length","statistiqueNbLivreDiff","count","countArrayLivre","vFor","includes","push","statistiqueNbEcoleDiff","countArraySchool","statistiqueNbBranchesDiff","countArrayBranche","branche","statistiqueNbClassesDiff","countArrayClasse","classe","methods","updateSearch","ongletRecherche","alert","ongletStats","ongletConfiguration"],"sourceRoot":"","sources":["/home/maurais/Documents/projet-vue/src/components/formSpellStats.vue"],"sourcesContent":["<template>\n  <table class=\"stats\">\n    <tr>\n      <th>Nombre de livres</th>\n      <th>Nombre de sorts</th>\n      <th>Nombre d'écoles</th>\n      <th>Nombre de branches</th>\n      <th>Nombre de classes</th>\n    </tr>\n    <tr>\n      <td>{{ statistiqueNbLivreDiff }}</td>\n      <td>{{ statistiqueSort }}</td>\n      <td>{{ statistiqueNbEcoleDiff }}</td>\n      <td>{{ statistiqueNbBranchesDiff }}</td>\n      <td>{{ statistiqueNbClassesDiff }}</td>\n    </tr>\n  </table>\n</template>\n\n\n<script>\nimport data from \"../assets/data.min.js\"; // Lien vers toutes les données\n\nexport default {\n  name: \"spellStats\",\n  props: [\"tableauSpells\"],\n  components: {\n    checkBoxSelect,\n    spellStats,\n    menuHeader,\n  },\n  data: function () {\n    return { searchName: \"\", searchNameBox: \"\" };\n  },\n  computed: {\n    spellSearch() {\n      /*On récupère les data de la base JS qu'on importe,\n        On filtre toutes les valeurs\n        On encapsule chaque valeur de nom, ici 'spell[1]' dans une variable 'spell'\n        Qui commence par les valeurs rentrés dans la zone de texte de l'input */\n      console.log(this.searchNameBox);\n      console.log(data);\n\n      if (this.searchNameBox)\n        return data.filter((spell) => spell[1].startsWith(this.searchName));\n      else return [];\n    },\n    statistiqueSort() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        return value.length;\n      } else return 0;\n    },\n    statistiqueNbLivreDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        let count = 0;\n        let countArrayLivre = [];\n        for (const vFor of value) {\n          if (!countArrayLivre.includes(vFor[0])) {\n            count++;\n            countArrayLivre.push(vFor[0]);\n          }\n        }\n        return count;\n      } else return 0;\n    },\n    statistiqueNbEcoleDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        let count = 0;\n        let countArraySchool = [];\n        for (const vFor of value) {\n          if (!countArraySchool.includes(vFor[2])) {\n            count++;\n            countArraySchool.push(vFor[2]);\n          }\n        }\n        return count;\n      } else return 0;\n    },\n    statistiqueNbBranchesDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        let count = 0;\n        let countArrayBranche = [];\n        for (const vFor of value) {\n          if (vFor[3].length != 0) {\n            for (const branche of vFor[3]) {\n              if (!countArrayBranche.includes(branche)) {\n                count++;\n                countArrayBranche.push(branche);\n              }\n            }\n          }\n        }\n        return count;\n      } else return 0;\n    },\n    statistiqueNbClassesDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        let count = 0;\n        let countArrayClasse = [];\n        for (const vFor of value) {\n          if (vFor[3].length != 0) {\n            for (const classe of vFor[4]) {\n              if (!countArrayClasse.includes(classe[0])) {\n                count++;\n                countArrayClasse.push(classe[0]);\n              }\n            }\n          }\n        }\n        return count;\n      } else return 0;\n    },\n  },\n  methods: {\n    updateSearch(searchName, searchNameBox) {\n      this.searchName = searchName;\n      this.searchNameBox = searchNameBox;\n    },\n    ongletRecherche() {\n      alert(\"Recherche\");\n    },\n    ongletStats() {\n      console.log(\"Stats\");\n    },\n    ongletConfiguration() {\n      alert(\"Configuration\");\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\ntable {\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.stats {\n  width: 100%;\n  border-collapse: collapse;\n  border: 2px solid black;\n}\nth {\n  padding: 5px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}