{"ast":null,"code":"export default {\n  name: \"spellStats\",\n\n  statistiqueSort() {\n    if (this.searchNameBox) {\n      let value = data.filter(spell => spell[1].startsWith(this.searchName));\n      return value.length;\n    } else return 0;\n  },\n\n  statistiqueNbLivreDiff() {\n    if (this.searchNameBox) {\n      let value = data.filter(spell => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArrayLivre = [];\n\n      for (const vFor of value) {\n        if (!countArrayLivre.includes(vFor[0])) {\n          count++;\n          countArrayLivre.push(vFor[0]);\n        }\n      }\n\n      return count;\n    } else return 0;\n  },\n\n  statistiqueNbEcoleDiff() {\n    if (this.searchNameBox) {\n      let value = data.filter(spell => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArraySchool = [];\n\n      for (const vFor of value) {\n        if (!countArraySchool.includes(vFor[2])) {\n          count++;\n          countArraySchool.push(vFor[2]);\n        }\n      }\n\n      return count;\n    } else return 0;\n  },\n\n  statistiqueNbBranchesDiff() {\n    if (this.searchNameBox) {\n      let value = data.filter(spell => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArrayBranche = [];\n\n      for (const vFor of value) {\n        if (vFor[3].length != 0) {\n          for (const branche of vFor[3]) {\n            if (!countArrayBranche.includes(branche)) {\n              count++;\n              countArrayBranche.push(branche);\n            }\n          }\n        }\n      }\n\n      return count;\n    } else return 0;\n  },\n\n  statistiqueNbClassesDiff() {\n    if (this.searchNameBox) {\n      let value = data.filter(spell => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArrayClasse = [];\n\n      for (const vFor of value) {\n        if (vFor[3].length != 0) {\n          for (const classe of vFor[4]) {\n            if (!countArrayClasse.includes(classe[0])) {\n              count++;\n              countArrayClasse.push(classe[0]);\n            }\n          }\n        }\n      }\n\n      return count;\n    } else return 0;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["name","statistiqueSort","searchNameBox","value","data","filter","spell","startsWith","searchName","length","statistiqueNbLivreDiff","count","countArrayLivre","vFor","includes","push","statistiqueNbEcoleDiff","countArraySchool","statistiqueNbBranchesDiff","countArrayBranche","branche","statistiqueNbClassesDiff","countArrayClasse","classe"],"sourceRoot":"","sources":["/home/maurais/Documents/projet-vue/src/components/formSpellStats.vue"],"sourcesContent":["<template>\n  <table class=\"stats\">\n    <tr>\n      <th>Nombre de livres</th>\n      <th>Nombre de sorts</th>\n      <th>Nombre d'Ã©coles</th>\n      <th>Nombre de branches</th>\n      <th>Nombre de classes</th>\n    </tr>\n    <tr>\n      <td>{{ statistiqueNbLivreDiff }}</td>\n      <td>{{ statistiqueSort }}</td>\n      <td>{{ statistiqueNbEcoleDiff }}</td>\n      <td>{{ statistiqueNbBranchesDiff }}</td>\n      <td>{{ statistiqueNbClassesDiff }}</td>\n    </tr>\n  </table>\n</template>\n\n\n<script>\nexport default {\n  name: \"spellStats\",\n  statistiqueSort() {\n    if (this.searchNameBox) {\n      let value = data.filter((spell) => spell[1].startsWith(this.searchName));\n      return value.length;\n    } else return 0;\n  },\n  statistiqueNbLivreDiff() {\n    if (this.searchNameBox) {\n      let value = data.filter((spell) => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArrayLivre = [];\n      for (const vFor of value) {\n        if (!countArrayLivre.includes(vFor[0])) {\n          count++;\n          countArrayLivre.push(vFor[0]);\n        }\n      }\n      return count;\n    } else return 0;\n  },\n  statistiqueNbEcoleDiff() {\n    if (this.searchNameBox) {\n      let value = data.filter((spell) => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArraySchool = [];\n      for (const vFor of value) {\n        if (!countArraySchool.includes(vFor[2])) {\n          count++;\n          countArraySchool.push(vFor[2]);\n        }\n      }\n      return count;\n    } else return 0;\n  },\n  statistiqueNbBranchesDiff() {\n    if (this.searchNameBox) {\n      let value = data.filter((spell) => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArrayBranche = [];\n      for (const vFor of value) {\n        if (vFor[3].length != 0) {\n          for (const branche of vFor[3]) {\n            if (!countArrayBranche.includes(branche)) {\n              count++;\n              countArrayBranche.push(branche);\n            }\n          }\n        }\n      }\n      return count;\n    } else return 0;\n  },\n  statistiqueNbClassesDiff() {\n    if (this.searchNameBox) {\n      let value = data.filter((spell) => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArrayClasse = [];\n      for (const vFor of value) {\n        if (vFor[3].length != 0) {\n          for (const classe of vFor[4]) {\n            if (!countArrayClasse.includes(classe[0])) {\n              count++;\n              countArrayClasse.push(classe[0]);\n            }\n          }\n        }\n      }\n      return count;\n    } else return 0;\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\ntable {\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.stats {\n  width: 100%;\n  border-collapse: collapse;\n  border: 2px solid black;\n}\nth {\n  padding: 5px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}