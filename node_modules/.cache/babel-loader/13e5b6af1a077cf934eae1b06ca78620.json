{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"stats\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nombre de livres\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Nombre de sorts\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Nombre d'écoles\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Nombre de branches\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Nombre de classes\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString($options.statistiqueNbLivreDiff), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString($options.statistiqueSort), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString($options.statistiqueNbEcoleDiff), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString($options.statistiqueNbBranchesDiff), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString($options.statistiqueNbClassesDiff), 1\n  /* TEXT */\n  )])]);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;gCACXC,oBAMK,IANL,EAMK,IANL,EAMK,cALHA,oBAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,CAKG,eAJHA,oBAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,CAIG,eAHHA,oBAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,CAGG,eAFHA,oBAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,CAEG,eADHA,oBAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,CACG,CANL;;AAAA;;;uBADFC,oBAeQ,OAfR,cAeQ,CAdNC,UAcM,EAPNF,oBAMK,IANL,EAMK,IANL,EAMK,CALHA,oBAAqC,IAArC,EAAqC,IAArC,EAAqCG,iBAA9BC,+BAA8B,CAArC,EAA6B;AAAA;AAA7B,GAKG,EAJHJ,oBAA8B,IAA9B,EAA8B,IAA9B,EAA8BG,iBAAvBC,wBAAuB,CAA9B,EAAsB;AAAA;AAAtB,GAIG,EAHHJ,oBAAqC,IAArC,EAAqC,IAArC,EAAqCG,iBAA9BC,+BAA8B,CAArC,EAA6B;AAAA;AAA7B,GAGG,EAFHJ,oBAAwC,IAAxC,EAAwC,IAAxC,EAAwCG,iBAAjCC,kCAAiC,CAAxC,EAAgC;AAAA;AAAhC,GAEG,EADHJ,oBAAuC,IAAvC,EAAuC,IAAvC,EAAuCG,iBAAhCC,iCAAgC,CAAvC,EAA+B;AAAA;AAA/B,GACG,CANL,CAOM,CAfR","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_toDisplayString","$options"],"sourceRoot":"","sources":["/home/maurais/Documents/projet-vue/src/components/formSpellStats.vue"],"sourcesContent":["<template>\n  <table class=\"stats\">\n    <tr>\n      <th>Nombre de livres</th>\n      <th>Nombre de sorts</th>\n      <th>Nombre d'écoles</th>\n      <th>Nombre de branches</th>\n      <th>Nombre de classes</th>\n    </tr>\n    <tr>\n      <td>{{ statistiqueNbLivreDiff }}</td>\n      <td>{{ statistiqueSort }}</td>\n      <td>{{ statistiqueNbEcoleDiff }}</td>\n      <td>{{ statistiqueNbBranchesDiff }}</td>\n      <td>{{ statistiqueNbClassesDiff }}</td>\n    </tr>\n  </table>\n</template>\n\n\n<script>\nexport default {\n  name: \"spellStats\",\n  props: [\"tableauSpells\"],\n  computed: {\n    spellSearch() {\n      /*On récupère les data de la base JS qu'on importe,\n        On filtre toutes les valeurs\n        On encapsule chaque valeur de nom, ici 'spell[1]' dans une variable 'spell'\n        Qui commence par les valeurs rentrés dans la zone de texte de l'input */\n      console.log(this.searchNameBox);\n      console.log(data);\n\n      if (this.searchNameBox)\n        return data.filter((spell) => spell[1].startsWith(this.searchName));\n      else return [];\n    },\n    statistiqueSort() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        return value.length;\n      } else return 0;\n    },\n    statistiqueNbLivreDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        let count = 0;\n        let countArrayLivre = [];\n        for (const vFor of value) {\n          if (!countArrayLivre.includes(vFor[0])) {\n            count++;\n            countArrayLivre.push(vFor[0]);\n          }\n        }\n        return count;\n      } else return 0;\n    },\n    statistiqueNbEcoleDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        let count = 0;\n        let countArraySchool = [];\n        for (const vFor of value) {\n          if (!countArraySchool.includes(vFor[2])) {\n            count++;\n            countArraySchool.push(vFor[2]);\n          }\n        }\n        return count;\n      } else return 0;\n    },\n    statistiqueNbBranchesDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        let count = 0;\n        let countArrayBranche = [];\n        for (const vFor of value) {\n          if (vFor[3].length != 0) {\n            for (const branche of vFor[3]) {\n              if (!countArrayBranche.includes(branche)) {\n                count++;\n                countArrayBranche.push(branche);\n              }\n            }\n          }\n        }\n        return count;\n      } else return 0;\n    },\n    statistiqueNbClassesDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        let count = 0;\n        let countArrayClasse = [];\n        for (const vFor of value) {\n          if (vFor[3].length != 0) {\n            for (const classe of vFor[4]) {\n              if (!countArrayClasse.includes(classe[0])) {\n                count++;\n                countArrayClasse.push(classe[0]);\n              }\n            }\n          }\n        }\n        return count;\n      } else return 0;\n    },\n  },\n  methods: {\n    updateSearch(searchName, searchNameBox) {\n      this.searchName = searchName;\n      this.searchNameBox = searchNameBox;\n    },\n    ongletRecherche() {\n      alert(\"Recherche\");\n    },\n    ongletStats() {\n      console.log(\"Stats\");\n    },\n    ongletConfiguration() {\n      alert(\"Configuration\");\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\ntable {\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.stats {\n  width: 100%;\n  border-collapse: collapse;\n  border: 2px solid black;\n}\nth {\n  padding: 5px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}