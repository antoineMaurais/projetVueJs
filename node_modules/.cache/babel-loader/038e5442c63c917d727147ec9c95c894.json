{"ast":null,"code":"import spellView from \"./components/formSpellView.vue\";\nimport data from \"./assets/data.min.js\"; // Lien vers toutes les données\n\nexport default {\n  name: \"App\",\n  components: {\n    spellView\n  },\n  data: function () {\n    return {\n      searchName: \"\"\n    };\n  },\n  computed: {\n    spellSearch() {\n      /*On récupère les data de la base JS qu'on importe,\n        On filtre toutes les valeurs\n        On encapsule chaque valeur de nom, ici 'spell[1]' dans une variable 'spell'\n        Qui commence par les valeurs rentrés dans la zone de texte de l'input */\n      return data.filter(spell => spell[1].startsWith(this.searchName));\n    },\n\n    statistiqueSort() {\n      let value = data.filter(spell => spell[1].startsWith(this.searchName));\n      return value.length;\n    },\n\n    statistiqueNbArmeDiff() {\n      let value = data.filter(spell => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArrayArme = [];\n\n      for (const vFor of value) {\n        if (!countArrayArme.includes(vFor[0])) {\n          count++;\n          countArrayArme.push(vFor[0]);\n        }\n      }\n\n      return count;\n    },\n\n    statistiqueNbEcoleDiff() {\n      let value = data.filter(spell => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArrayArme = [];\n\n      for (const vFor of value) {\n        if (!countArrayArme.includes(vFor[3])) {\n          count++;\n          countArrayArme.push(vFor[3]);\n        }\n      }\n\n      return count;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2CA,OAAOA,SAAP,MAAsB,gCAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CAAyC;;AAEzC,eAAe;AACbC,MAAI,EAAE,KADO;AAEbC,YAAU,EAAE;AACVH;AADU,GAFC;AAKbC,MAAI,EAAE,YAAY;AAChB,WAAO;AAAEG,gBAAU,EAAE;AAAd,KAAP;AACD,GAPY;AAQbC,UAAQ,EAAE;AACRC,eAAW,GAAG;AACZ;;;;AAIA,aAAOL,IAAI,CAACM,MAAL,CAAaC,KAAD,IAAWA,KAAK,CAAC,CAAD,CAAL,CAASC,UAAT,CAAoB,KAAKL,UAAzB,CAAvB,CAAP;AACD,KAPO;;AAQRM,mBAAe,GACf;AACE,UAAIC,KAAI,GAAIV,IAAI,CAACM,MAAL,CAAaC,KAAD,IAAWA,KAAK,CAAC,CAAD,CAAL,CAASC,UAAT,CAAoB,KAAKL,UAAzB,CAAvB,CAAZ;AACA,aAAOO,KAAK,CAACC,MAAb;AACD,KAZO;;AAaRC,yBAAqB,GACrB;AACE,UAAIF,KAAI,GAAIV,IAAI,CAACM,MAAL,CAAaC,KAAD,IAAWA,KAAK,CAAC,CAAD,CAAL,CAASC,UAAT,CAAoB,KAAKL,UAAzB,CAAvB,CAAZ;AACA,UAAIU,KAAI,GAAI,CAAZ;AACA,UAAIC,cAAa,GAAG,EAApB;;AACA,WAAK,MAAMC,IAAX,IAAmBL,KAAnB,EACA;AACE,YAAI,CAACI,cAAc,CAACE,QAAf,CAAwBD,IAAI,CAAC,CAAD,CAA5B,CAAL,EACA;AACEF,eAAK;AACLC,wBAAc,CAACG,IAAf,CAAoBF,IAAI,CAAC,CAAD,CAAxB;AACF;AACF;;AACA,aAAOF,KAAP;AACD,KA3BO;;AA4BRK,0BAAsB,GACtB;AACE,UAAIR,KAAI,GAAIV,IAAI,CAACM,MAAL,CAAaC,KAAD,IAAWA,KAAK,CAAC,CAAD,CAAL,CAASC,UAAT,CAAoB,KAAKL,UAAzB,CAAvB,CAAZ;AACA,UAAIU,KAAI,GAAI,CAAZ;AACA,UAAIC,cAAa,GAAG,EAApB;;AACA,WAAK,MAAMC,IAAX,IAAmBL,KAAnB,EACA;AACE,YAAI,CAACI,cAAc,CAACE,QAAf,CAAwBD,IAAI,CAAC,CAAD,CAA5B,CAAL,EACA;AACEF,eAAK;AACLC,wBAAc,CAACG,IAAf,CAAoBF,IAAI,CAAC,CAAD,CAAxB;AACF;AACF;;AACA,aAAOF,KAAP;AACF;;AA1CQ;AARG,CAAf","names":["spellView","data","name","components","searchName","computed","spellSearch","filter","spell","startsWith","statistiqueSort","value","length","statistiqueNbArmeDiff","count","countArrayArme","vFor","includes","push","statistiqueNbEcoleDiff"],"sourceRoot":"","sources":["/home/uhartegr/Documents/Ecole_Ingé_Enssat/IMR1/Période_3/Technologie_web/VueJS/projet-vue/src/App.vue"],"sourcesContent":["<template>\n  <HelloWorld msg=\"Sorts :\" />\n\n  <h1>Search searchName :</h1>\n  <h4>Il manque les stats(nombre de livres, de sorts...)</h4>\n  <input\n    type=\"text\"\n    id=\"search_name_val\"\n    v-model=\"searchName\"\n    placeholder=\"Rechercher\"\n  />\n  <table>\n    <tr>\n      <th>Nombre de sorts</th>\n      <th>Nombre d'armes</th>\n    </tr>\n    <tr>\n      <td>{{statistiqueNbSort}}</td>\n      <td>{{statistiqueArme}}</td>\n      <td>{{statistiqueArme}}</td>\n    </tr>\n  </table>\n\n  <table>\n    <tr>\n      <th>Arme</th>\n      <th>Nom</th>\n      <th>Ecole</th>\n      <th>Classe</th>\n    </tr>\n    <!--  On boucle des lignes de tableau\n          Chaque entité de spellSearch va être stocké dans spellFor\n          Puis on met une clé pour dire sur quoi on boucle, ici le nom, mais c'est inutile dans notre cas\n    -->\n\n    <tr v-for=\"spellFor in spellSearch\" :key=\"spellFor[1]\">\n      <!--On appel l'élément spell de spellView et on lui donne la valeur de spellFor pour qu'il travaille avec -->\n      <spellView :spell=\"spellFor\" />\n    </tr>\n  </table>\n</template>\n\n<script>\nimport spellView from \"./components/formSpellView.vue\";\nimport data from \"./assets/data.min.js\"; // Lien vers toutes les données\n\nexport default {\n  name: \"App\",\n  components: {\n    spellView,\n  },\n  data: function () {\n    return { searchName: \"\" };\n  },\n  computed: {\n    spellSearch() {\n      /*On récupère les data de la base JS qu'on importe,\n        On filtre toutes les valeurs\n        On encapsule chaque valeur de nom, ici 'spell[1]' dans une variable 'spell'\n        Qui commence par les valeurs rentrés dans la zone de texte de l'input */\n      return data.filter((spell) => spell[1].startsWith(this.searchName));\n    },\n    statistiqueSort()\n    {\n      let value = data.filter((spell) => spell[1].startsWith(this.searchName));      \n      return value.length;\n    },\n    statistiqueNbArmeDiff()\n    {\n      let value = data.filter((spell) => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArrayArme =[];\n      for (const vFor of value)\n      {\n        if (!countArrayArme.includes(vFor[0]))\n        {\n          count++;\n          countArrayArme.push(vFor[0]);\n        }\n      } \n      return count;\n    },\n    statistiqueNbEcoleDiff()\n    {\n      let value = data.filter((spell) => spell[1].startsWith(this.searchName));\n      let count = 0;\n      let countArrayArme =[];\n      for (const vFor of value)\n      {\n        if (!countArrayArme.includes(vFor[3]))\n        {\n          count++;\n          countArrayArme.push(vFor[3]);\n        }\n      } \n      return count;\n    }\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\ntable {\n  margin-top : 20px;\n  margin-left : auto;\n  margin-right : auto;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}