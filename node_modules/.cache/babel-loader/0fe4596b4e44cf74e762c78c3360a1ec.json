{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Wiki des sorts\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"th\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Prendre en compte\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = {\n  class: \"stats\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nombre de livres\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Nombre de sorts\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Nombre d'écoles\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Arme\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Nom\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ecole\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Classe\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HelloWorld = _resolveComponent(\"HelloWorld\");\n\n  const _component_checkBoxSelect = _resolveComponent(\"checkBoxSelect\");\n\n  const _component_spellView = _resolveComponent(\"spellView\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HelloWorld, {\n    msg: \"Sorts :\"\n  }), _hoisted_1, _createElementVNode(\"table\", null, [_hoisted_2, _hoisted_3, _createElementVNode(\"tr\", null, [_createVNode(_component_checkBoxSelect, {\n    onSpellSearch: $options.updateSearch\n  }, null, 8\n  /* PROPS */\n  , [\"onSpellSearch\"])])]), _hoisted_4, _createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString($options.statistiqueSort), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString($options.statistiqueNbLivreDiff), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString($options.statistiqueNbEcoleDiff), 1\n  /* TEXT */\n  )])]), _createElementVNode(\"table\", null, [_hoisted_7, _createCommentVNode(\"  On boucle des lignes de tableau\\n          Chaque entité de spellSearch va être stocké dans spellFor\\n          Puis on met une clé pour dire sur quoi on boucle, ici le nom, mais c'est inutile dans notre cas\\n    \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.spellSearch, spellFor => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: spellFor[1]\n    }, [_createCommentVNode(\"On appel l'élément spell de spellView et on lui donne la valeur de spellFor pour qu'il travaille avec \"), _createVNode(_component_spellView, {\n      spell: spellFor\n    }, null, 8\n    /* PROPS */\n    , [\"spell\"])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAGEA,oBAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,EAAkB;AAAA;AAAlB;;gCAEEA,oBAAS,IAAT,EAAS,IAAT,EAAS,IAAT,EAAS;AAAA;AAAT;;gCACAA,oBAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,EAAqB;AAAA;AAArB;;gCAKFA,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;;AAEOC,OAAK,EAAC;;;gCACXD,oBAIK,IAJL,EAIK,IAJL,EAIK,cAHHA,oBAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,CAGG,eAFHA,oBAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,CAEG,eADHA,oBAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,CACG,CAJL;;AAAA;;gCAaAA,oBAKK,IALL,EAKK,IALL,EAKK,cAJHA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAIG,eAHHA,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,CAGG,eAFHA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,CAEG,eADHA,oBAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CACG,CALL;;AAAA;;;;;;;;;6DA1BFE,aAA4BC,qBAA5B,EAA4B;AAAhBC,OAAG,EAAC;AAAY,GAA5B,GAEAC,YACAL,oBAMQ,OANR,EAMQ,IANR,EAMQ,CALNM,UAKM,EAJNC,UAIM,EAHNP,oBAEK,IAFL,EAEK,IAFL,EAEK,CADHE,aAA8CM,yBAA9C,EAA8C;AAA7BC,iBAAW,EAAEC;AAAgB,GAA9C,EAA0C,IAA1C,EAA0C;AAAA;AAA1C,IAA0C,iBAA1C,CACG,CAFL,CAGM,CANR,GAOAC,YAEAX,oBAWQ,OAXR,cAWQ,CAVNY,UAUM,EALNZ,oBAIK,IAJL,EAIK,IAJL,EAIK,CAHHA,oBAA8B,IAA9B,EAA8B,IAA9B,EAA8Ba,iBAAvBH,wBAAuB,CAA9B,EAAsB;AAAA;AAAtB,GAGG,EAFHV,oBAAqC,IAArC,EAAqC,IAArC,EAAqCa,iBAA9BH,+BAA8B,CAArC,EAA6B;AAAA;AAA7B,GAEG,EADHV,oBAAqC,IAArC,EAAqC,IAArC,EAAqCa,iBAA9BH,+BAA8B,CAArC,EAA6B;AAAA;AAA7B,GACG,CAJL,CAKM,CAXR,GAaAV,oBAgBQ,OAhBR,EAgBQ,IAhBR,EAgBQ,CAfNc,UAeM,EATNC,8OASM,qBAJNC,oBAGKC,SAHL,EAGK,IAHL,EAGKC,YAHkBR,oBAGlB,EAHMS,QAAuB,IAAf;yBAAnBH,oBAGK,IAHL,EAGK;AAHgCI,SAAG,EAAED,QAAQ;AAG7C,KAHL,GACEJ,+HACAb,aAA+BmB,oBAA/B,EAA+B;AAAnBC,WAAK,EAAEH;AAAY,KAA/B,EAA2B,IAA3B,EAA2B;AAAA;AAA3B,MAA2B,SAA3B,EAFF;GAGK,CAHL;;AAAA,GAIM,EAhBR","names":["_createElementVNode","class","_createVNode","_component_HelloWorld","msg","_hoisted_1","_hoisted_2","_hoisted_3","_component_checkBoxSelect","onSpellSearch","$options","_hoisted_4","_hoisted_6","_toDisplayString","_hoisted_7","_createCommentVNode","_createElementBlock","_Fragment","_renderList","spellFor","key","_component_spellView","spell"],"sourceRoot":"","sources":["/home/uhartegr/Documents/Ecole_Ingé_Enssat/IMR1/Période_3/Technologie_web/VueJS/projet-vue/src/App.vue"],"sourcesContent":["<template>\n  <HelloWorld msg=\"Sorts :\" />\n\n  <h1>Wiki des sorts</h1>\n  <table>\n    <th></th>\n    <th>Prendre en compte</th>\n    <tr>\n      <checkBoxSelect @spellSearch=\"updateSearch\" />\n    </tr>\n  </table>\n  <br />\n\n  <table class=\"stats\">\n    <tr>\n      <th>Nombre de livres</th>\n      <th>Nombre de sorts</th>\n      <th>Nombre d'écoles</th>\n    </tr>\n    <tr>\n      <td>{{ statistiqueSort }}</td>\n      <td>{{ statistiqueNbLivreDiff }}</td>\n      <td>{{ statistiqueNbEcoleDiff }}</td>\n    </tr>\n  </table>\n\n  <table>\n    <tr>\n      <th>Arme</th>\n      <th>Nom</th>\n      <th>Ecole</th>\n      <th>Classe</th>\n    </tr>\n    <!--  On boucle des lignes de tableau\n          Chaque entité de spellSearch va être stocké dans spellFor\n          Puis on met une clé pour dire sur quoi on boucle, ici le nom, mais c'est inutile dans notre cas\n    -->\n\n    <tr v-for=\"spellFor in spellSearch\" :key=\"spellFor[1]\">\n      <!--On appel l'élément spell de spellView et on lui donne la valeur de spellFor pour qu'il travaille avec -->\n      <spellView :spell=\"spellFor\" />\n    </tr>\n  </table>\n</template>\n\n<script>\nimport spellView from \"./components/formSpellView.vue\";\nimport checkBoxSelect from \"./components/formCheckBoxSelect.vue\";\nimport data from \"./assets/data.min.js\"; // Lien vers toutes les données\n\nexport default {\n  name: \"App\",\n  components: {\n    spellView,\n    checkBoxSelect,\n  },\n  data: function () {\n    return { searchName: \"\", searchNameBox: \"\" };\n  },\n  computed: {\n    spellSearch() {\n      /*On récupère les data de la base JS qu'on importe,\n        On filtre toutes les valeurs\n        On encapsule chaque valeur de nom, ici 'spell[1]' dans une variable 'spell'\n        Qui commence par les valeurs rentrés dans la zone de texte de l'input */\n      console.log(this.searchNameBox);\n\n      if (this.searchNameBox)\n        return data.filter((spell) => spell[1].startsWith(this.searchName));\n      else return [];\n    },\n    statistiqueSort() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        return value.length;\n      } else return 0;\n    },\n    statistiqueNbLivreDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        let count = 0;\n        let countArrayArme = [];\n        for (const vFor of value) {\n          if (!countArrayArme.includes(vFor[0])) {\n            count++;\n            countArrayArme.push(vFor[0]);\n          }\n        }\n        return count;\n      } else return 0;\n    },\n    statistiqueNbEcoleDiff() {\n      if (this.searchNameBox) {\n        let value = data.filter((spell) =>\n          spell[1].startsWith(this.searchName)\n        );\n        let count = 0;\n        let countArrayArme = [];\n        for (const vFor of value) {\n          if (!countArrayArme.includes(vFor[2])) {\n            count++;\n            countArrayArme.push(vFor[2]);\n          }\n        }\n        return count;\n      } else return 0;\n    },\n  },\n  methods: {\n    updateSearch(searchName, searchNameBox) {\n      this.searchName = searchName;\n      this.searchNameBox = searchNameBox;\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\ntable {\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n}\n  tr {\n    border-top: 1px solid #ddd;\n    border-bottom: 1px solid #ddd;\n  }\n  \n  th {\n    display: none; // for accessibility, use a visually hidden method here instead! Thanks, reddit!   \n  }\n  \n  td {\n    display: block; \n    \n    &:first-child {\n      padding-top: .5em;\n    }\n    &:last-child {\n      padding-bottom: .5em;\n    }\n\n    &:before {\n      content: attr(data-th)\": \"; // who knew you could do this? The internet, that's who.\n      font-weight: bold;\n\n      // optional stuff to make it look nicer\n      width: 6.5em; // magic number :( adjust according to your own content\n      display: inline-block;\n      // end options\n      \n      @media (min-width: $breakpoint-alpha) {\n        display: none;\n      }\n    }\n  }\n  \n  th, td {\n    text-align: left;\n    \n    @media (min-width: $breakpoint-alpha) {\n      display: table-cell;\n      padding: .25em .5em;\n      \n      &:first-child {\n        padding-left: 0;\n      }\n      \n      &:last-child {\n        padding-right: 0;\n      }\n    }\n\n  }\n.stats{\n  \n  width: 100%;\n  border-collapse: collapse;\n  border: 2px solid black;\n}\nth {\n  padding: 5px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}